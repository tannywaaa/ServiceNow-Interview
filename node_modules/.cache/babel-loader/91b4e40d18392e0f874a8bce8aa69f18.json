{"ast":null,"code":"var _jsxFileName = \"/Users/wangtangni/Desktop/ServiceNow-Interview/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Table } from \"react-bootstrap\";\nimport Card from \"./components/Card\";\nconst URL = \"https://servicenow-ui-coding-challenge-api.netlify.app/.netlify/functions/server/incidents\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.incident_table = row_item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"incident_table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      }, \"Number\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, \"Priority\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      }, \"Short description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }\n      }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }, \"Created\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, row_item)));\n    };\n\n    this.state = {\n      incidents_all: [],\n      open: [],\n      inprogress: [],\n      resolved: [],\n      closed: []\n    };\n  }\n\n  async componentDidMount() {\n    const res = await fetch(URL);\n    const api = await res.json();\n    const incidents_all = api;\n    console.log(incidents_all[0]);\n    let open = 0,\n        inprogress = 0,\n        resolved = 0,\n        closed = 0;\n    api.forEach(element => {\n      if (element.state === \"Open\") {\n        open++;\n      } else if (element.state === \"In Progress\") {\n        inprogress++;\n      } else if (element.state === \"Resolved\") {\n        resolved++;\n      } else if (element.state === \"Closed\") {\n        closed++;\n      }\n    });\n    console.log(\"open\", open);\n    this.setState({\n      incidents_all,\n      open: open,\n      inprogress: inprogress,\n      resolved: resolved,\n      closed: closed\n    });\n  }\n\n  render() {\n    if (this.state.incidents_all == null) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 50\n      }\n    });\n    let displayrows = [];\n    let item = this.state.incidents_all;\n\n    for (let i = 0; i < item.length; i++) {\n      let temp_row_element = /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, item[i].number), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, item[i].priority), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, item[i].short_description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, item[i].category), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, item[i].state), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, item[i].sys_created_on));\n      displayrows.push(temp_row_element);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getDataByState(\"Open\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"By State Open \", this.state.open), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getDataByState(\"In Progress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"By State In Progress \", this.state.inProgress), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getDataByState(\"Closed\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"By State Closed \", this.state.closed), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getDataByState(\"Resolved\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, \"By State Resolved \", this.state.resolved), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"At A Glance\"), /*#__PURE__*/React.createElement(Card, {\n      href: \"/\",\n      title: \"aaa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, \"All Incidents\"), this.incident_table(displayrows));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wangtangni/Desktop/ServiceNow-Interview/src/App.js"],"names":["React","Component","Table","Card","URL","App","constructor","props","incident_table","row_item","state","incidents_all","open","inprogress","resolved","closed","componentDidMount","res","fetch","api","json","console","log","forEach","element","setState","render","displayrows","item","i","length","temp_row_element","number","priority","short_description","category","sys_created_on","push","getDataByState","inProgress"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Table } from \"react-bootstrap\";\nimport Card from \"./components/Card\";\n\nconst URL =\n  \"https://servicenow-ui-coding-challenge-api.netlify.app/.netlify/functions/server/incidents\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incidents_all: [],\n      open: [],\n      inprogress: [],\n      resolved: [],\n      closed: []\n    };\n  }\n  async componentDidMount() {\n    const res = await fetch(URL);\n    const api = await res.json();\n    const incidents_all = api;\n\n    console.log(incidents_all[0]);\n    let open = 0,\n      inprogress = 0,\n      resolved = 0,\n      closed = 0;\n\n    api.forEach(element => {\n      if (element.state === \"Open\") {\n        open++;\n      } else if (element.state === \"In Progress\") {\n        inprogress++;\n      } else if (element.state === \"Resolved\") {\n        resolved++;\n      } else if (element.state === \"Closed\") {\n        closed++;\n      }\n    });\n    console.log(\"open\", open);\n\n    this.setState({\n      incidents_all,\n      open: open,\n      inprogress: inprogress,\n      resolved: resolved,\n      closed: closed\n    });\n  }\n  render() {\n    if (this.state.incidents_all == null) return <div />;\n    let displayrows = [];\n    let item = this.state.incidents_all;\n\n    for (let i = 0; i < item.length; i++) {\n      let temp_row_element = (\n        <tr>\n          <td>{item[i].number}</td>\n          <td>{item[i].priority}</td>\n          <td>{item[i].short_description}</td>\n          <td>{item[i].category}</td>\n          <td>{item[i].state}</td>\n          <td>{item[i].sys_created_on}</td>\n        </tr>\n      );\n      displayrows.push(temp_row_element);\n    }\n    return (\n      <div className=\"content\">\n        <button onClick={() => this.getDataByState(\"Open\")}>\n          By State Open {this.state.open}\n        </button>\n        <button onClick={() => this.getDataByState(\"In Progress\")}>\n          By State In Progress {this.state.inProgress}\n        </button>\n        <button onClick={() => this.getDataByState(\"Closed\")}>\n          By State Closed {this.state.closed}\n        </button>\n        <button onClick={() => this.getDataByState(\"Resolved\")}>\n          By State Resolved {this.state.resolved}\n        </button>\n\n        <h3>At A Glance</h3>\n        <Card href=\"/\" title={\"aaa\"} />\n        <h3>All Incidents</h3>\n        {this.incident_table(displayrows)}\n      </div>\n    );\n  }\n  incident_table = row_item => {\n    return (\n      <div class=\"incident_table\">\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>Number</th>\n              <th>Priority</th>\n              <th>Short description</th>\n              <th>Category</th>\n              <th>State</th>\n              <th>Created</th>\n            </tr>\n          </thead>\n          <tbody>{row_item}</tbody>\n        </Table>\n      </div>\n    );\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}