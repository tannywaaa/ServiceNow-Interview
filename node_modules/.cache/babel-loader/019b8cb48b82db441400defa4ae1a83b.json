{"ast":null,"code":"var _jsxFileName = \"/Users/wangtangni/Desktop/ServiceNow-Interview/src/components/table_by_state.js\";\nimport React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport Card from \"./components/card\";\nimport TableByState from \"./components/table_by_state\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nconst URL = \"https://servicenow-ui-coding-challenge-api.netlify.app/.netlify/functions/server\";\nexport class table_by_state extends Component {\n  constructor(props) {\n    super(props);\n\n    this.get_all_data = () => {\n      fetch(URL + \"/incidents\").then(async res => {\n        const api = await res.json();\n        const incidents_all = api;\n\n        if (!res.ok) {\n          // get error message from body or default to response statusText\n          const error = incidents_all && incidents_all.message || res.statusText;\n          return Promise.reject(error);\n        } else {\n          let open = 0,\n              inprogress = 0,\n              resolved = 0,\n              closed = 0;\n          api.forEach(element => {\n            if (element.state === \"Open\") {\n              open++;\n            } else if (element.state === \"In Progress\") {\n              inprogress++;\n            } else if (element.state === \"Resolved\") {\n              resolved++;\n            } else if (element.state === \"Closed\") {\n              closed++;\n            }\n          });\n          console.log(\"open\", open);\n          this.setState({\n            incidents_all,\n            open: open,\n            inprogress: inprogress,\n            resolved: resolved,\n            closed: closed\n          });\n        }\n      }).catch(error => {\n        // this.setState({ errorMessage: error });\n        console.error(\"There was an error!\", error);\n      });\n    };\n\n    this.get_data_by_state = state_requested => {\n      fetch(URL + \"/incidentsByState?state=\" + state_requested).then(async res => {\n        const api = await res.json();\n        const incidents_all = api; // check for error response\n\n        if (!res.ok) {\n          const error = incidents_all && incidents_all.message || res.statusText;\n          return Promise.reject(error);\n        } else {\n          this.setState({\n            incidents_all\n          });\n        }\n      }).catch(error => {\n        // this.setState({ errorMessage: error });\n        console.error(\"There was an error!\", error);\n      });\n    };\n\n    this.incident_table = row_item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"incident_table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }\n      }, \"Number\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, \"Priority\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, \"Short description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }\n      }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }\n      }, \"Created\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }\n      }, row_item)));\n    };\n\n    this.state = {\n      incidents_all: [],\n      open: [],\n      inprogress: [],\n      resolved: [],\n      closed: [],\n      click_card: false\n    };\n  }\n\n  async componentDidMount() {\n    this.get_all_data();\n  }\n\n  render() {\n    if (this.state.incidents_all == null) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 50\n      }\n    });\n    let displayrows = [];\n    let item = this.state.incidents_all;\n\n    for (let i = 0; i < item.length; i++) {\n      let temp_row_element = /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, item[i].number), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, item[i].priority), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, item[i].short_description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, item[i].category), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, item[i].state), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }, item[i].sys_created_on));\n      displayrows.push(temp_row_element);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, \"All Incidents\"), this.incident_table(displayrows));\n  } // display all incidents\n\n\n}\nexport default table_by_state;","map":{"version":3,"sources":["/Users/wangtangni/Desktop/ServiceNow-Interview/src/components/table_by_state.js"],"names":["React","Component","Table","Card","TableByState","BrowserRouter","Router","Switch","Route","Link","URL","table_by_state","constructor","props","get_all_data","fetch","then","res","api","json","incidents_all","ok","error","message","statusText","Promise","reject","open","inprogress","resolved","closed","forEach","element","state","console","log","setState","catch","get_data_by_state","state_requested","incident_table","row_item","click_card","componentDidMount","render","displayrows","item","i","length","temp_row_element","number","priority","short_description","category","sys_created_on","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport Card from \"./components/card\";\nimport TableByState from \"./components/table_by_state\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst URL =\n  \"https://servicenow-ui-coding-challenge-api.netlify.app/.netlify/functions/server\";\nexport class table_by_state extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incidents_all: [],\n      open: [],\n      inprogress: [],\n      resolved: [],\n      closed: [],\n      click_card: false\n    };\n  }\n  async componentDidMount() {\n    this.get_all_data();\n  }\n  get_all_data = () => {\n    fetch(URL + \"/incidents\")\n      .then(async res => {\n        const api = await res.json();\n        const incidents_all = api;\n\n        if (!res.ok) {\n          // get error message from body or default to response statusText\n          const error =\n            (incidents_all && incidents_all.message) || res.statusText;\n          return Promise.reject(error);\n        } else {\n          let open = 0,\n            inprogress = 0,\n            resolved = 0,\n            closed = 0;\n\n          api.forEach(element => {\n            if (element.state === \"Open\") {\n              open++;\n            } else if (element.state === \"In Progress\") {\n              inprogress++;\n            } else if (element.state === \"Resolved\") {\n              resolved++;\n            } else if (element.state === \"Closed\") {\n              closed++;\n            }\n          });\n          console.log(\"open\", open);\n\n          this.setState({\n            incidents_all,\n            open: open,\n            inprogress: inprogress,\n            resolved: resolved,\n            closed: closed\n          });\n        }\n      })\n      .catch(error => {\n        // this.setState({ errorMessage: error });\n        console.error(\"There was an error!\", error);\n      });\n  };\n  get_data_by_state = state_requested => {\n    fetch(URL + \"/incidentsByState?state=\" + state_requested)\n      .then(async res => {\n        const api = await res.json();\n        const incidents_all = api;\n\n        // check for error response\n        if (!res.ok) {\n          const error =\n            (incidents_all && incidents_all.message) || res.statusText;\n          return Promise.reject(error);\n        } else {\n          this.setState({ incidents_all });\n        }\n      })\n      .catch(error => {\n        // this.setState({ errorMessage: error });\n        console.error(\"There was an error!\", error);\n      });\n  };\n\n  render() {\n    if (this.state.incidents_all == null) return <div />;\n    let displayrows = [];\n    let item = this.state.incidents_all;\n\n    for (let i = 0; i < item.length; i++) {\n      let temp_row_element = (\n        <tr>\n          <td>{item[i].number}</td>\n          <td>{item[i].priority}</td>\n          <td>{item[i].short_description}</td>\n          <td>{item[i].category}</td>\n          <td>{item[i].state}</td>\n          <td>{item[i].sys_created_on}</td>\n        </tr>\n      );\n      displayrows.push(temp_row_element);\n    }\n    return (\n      <div>\n        <h3>All Incidents</h3>\n\n        {this.incident_table(displayrows)}\n      </div>\n    );\n  }\n\n  // display all incidents\n  incident_table = row_item => {\n    return (\n      <div className=\"incident_table\">\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>Number</th>\n              <th>Priority</th>\n              <th>Short description</th>\n              <th>Category</th>\n              <th>State</th>\n              <th>Created</th>\n            </tr>\n          </thead>\n          <tbody>{row_item}</tbody>\n        </Table>\n      </div>\n    );\n  };\n}\nexport default table_by_state;\n"]},"metadata":{},"sourceType":"module"}