{"ast":null,"code":"var _jsxFileName = \"/Users/wangtangni/Desktop/ServiceNow-Interview/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Table } from \"react-bootstrap\";\nimport Card from \"./components/card\";\nimport TableByState from \"./components/table_by_state\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nconst URL = \"https://servicenow-ui-coding-challenge-api.netlify.app/.netlify/functions/server\";\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/open\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableByState, {\n      state: \"Open\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/inprogress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableByState, {\n      state: \"In Progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/closed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableByState, {\n      state: \"Closed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/resolved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableByState, {\n      state: \"Resolved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.get_all_data = () => {\n      fetch(URL + \"/incidents\").then(async res => {\n        const api = await res.json();\n        const incidents_all = api;\n\n        if (!res.ok) {\n          // get error message from body or default to response statusText\n          const error = incidents_all && incidents_all.message || res.statusText;\n          return Promise.reject(error);\n        } else {\n          let open = 0,\n              inprogress = 0,\n              resolved = 0,\n              closed = 0;\n          api.forEach(element => {\n            if (element.state === \"Open\") {\n              open++;\n            } else if (element.state === \"In Progress\") {\n              inprogress++;\n            } else if (element.state === \"Resolved\") {\n              resolved++;\n            } else if (element.state === \"Closed\") {\n              closed++;\n            }\n          });\n          console.log(\"open\", open);\n          this.setState({\n            incidents_all,\n            open: open,\n            inprogress: inprogress,\n            resolved: resolved,\n            closed: closed\n          });\n        }\n      }).catch(error => {\n        // this.setState({ errorMessage: error });\n        console.error(\"There was an error!\", error);\n      });\n    };\n\n    this.incident_table = row_item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"incident_table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }\n      }, \"Number\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }\n      }, \"Priority\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }\n      }, \"Short description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }\n      }, \"Created\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }, row_item)));\n    };\n\n    this.addRowTemplate = () => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }\n      }, \"llll\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }\n      }, \"uuuu\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }\n      }, \"tttt\"), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.insert_incident = (number, priority, short_description, category, state, date) => {\n      //parameters for insertion:\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          number: number,\n          priority: priority,\n          short_description: short_description,\n          category: category,\n          state: state,\n          created: date\n        })\n      }; //Attempt to insert\n\n      fetch(URL + \"/insertIncident\", requestOptions).then(response => response.json()).then(data => this.setState({\n        postId: data.id\n      }));\n    };\n\n    this.state = {\n      incidents_all: [],\n      open: [],\n      inprogress: [],\n      resolved: [],\n      closed: [],\n      addShow: false\n    };\n  }\n\n  async componentDidMount() {\n    this.get_all_data();\n  }\n\n  render() {\n    if (this.state.incidents_all == null) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 50\n      }\n    });\n    let displayrows = [];\n    let item = this.state.incidents_all;\n\n    for (let i = 0; i < item.length; i++) {\n      let temp_row_element = /*#__PURE__*/React.createElement(\"tr\", {\n        key: \"all incidents\" + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, item[i].number), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, item[i].priority), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, item[i].short_description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, item[i].category), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, item[i].state), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, item[i].sys_created_on));\n      displayrows.push(temp_row_element);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, \"At A Glance\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"Home\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/open\",\n      style: {\n        color: \"black\",\n        textDecoration: \"none\",\n        padding: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Open\",\n      number: this.state.open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/inprogress\",\n      style: {\n        color: \"black\",\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"In Progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/closed\",\n      style: {\n        color: \"black\",\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Closed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/resolved\",\n      style: {\n        color: \"black\",\n        textDecoration: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"Resolved\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    })), this.incident_table(displayrows), this.state.addShow ? this.addRowTemplate() : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 55\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          addShow: !this.state.addShow\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }\n    }, \"Create A New Incident\"));\n  } // display all incidents\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wangtangni/Desktop/ServiceNow-Interview/src/App.js"],"names":["React","Component","Table","Card","TableByState","BrowserRouter","Router","Switch","Route","Link","URL","App","render","Home","constructor","props","get_all_data","fetch","then","res","api","json","incidents_all","ok","error","message","statusText","Promise","reject","open","inprogress","resolved","closed","forEach","element","state","console","log","setState","catch","incident_table","row_item","addRowTemplate","insert_incident","number","priority","short_description","category","date","requestOptions","method","headers","body","JSON","stringify","created","response","data","postId","id","addShow","componentDidMount","displayrows","item","i","length","temp_row_element","sys_created_on","push","color","textDecoration","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Table } from \"react-bootstrap\";\nimport Card from \"./components/card\";\nimport TableByState from \"./components/table_by_state\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst URL =\n  \"https://servicenow-ui-coding-challenge-api.netlify.app/.netlify/functions/server\";\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path=\"/open\">\n                <TableByState state={\"Open\"} />\n              </Route>\n              <Route path=\"/inprogress\">\n                <TableByState state={\"In Progress\"} />\n              </Route>\n              <Route path=\"/closed\">\n                <TableByState state={\"Closed\"} />\n              </Route>\n              <Route path=\"/resolved\">\n                <TableByState state={\"Resolved\"} />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incidents_all: [],\n      open: [],\n      inprogress: [],\n      resolved: [],\n      closed: [],\n      addShow: false\n    };\n  }\n  async componentDidMount() {\n    this.get_all_data();\n  }\n  get_all_data = () => {\n    fetch(URL + \"/incidents\")\n      .then(async res => {\n        const api = await res.json();\n        const incidents_all = api;\n\n        if (!res.ok) {\n          // get error message from body or default to response statusText\n          const error =\n            (incidents_all && incidents_all.message) || res.statusText;\n          return Promise.reject(error);\n        } else {\n          let open = 0,\n            inprogress = 0,\n            resolved = 0,\n            closed = 0;\n\n          api.forEach(element => {\n            if (element.state === \"Open\") {\n              open++;\n            } else if (element.state === \"In Progress\") {\n              inprogress++;\n            } else if (element.state === \"Resolved\") {\n              resolved++;\n            } else if (element.state === \"Closed\") {\n              closed++;\n            }\n          });\n          console.log(\"open\", open);\n\n          this.setState({\n            incidents_all,\n            open: open,\n            inprogress: inprogress,\n            resolved: resolved,\n            closed: closed\n          });\n        }\n      })\n      .catch(error => {\n        // this.setState({ errorMessage: error });\n        console.error(\"There was an error!\", error);\n      });\n  };\n  render() {\n    if (this.state.incidents_all == null) return <div />;\n    let displayrows = [];\n    let item = this.state.incidents_all;\n\n    for (let i = 0; i < item.length; i++) {\n      let temp_row_element = (\n        <tr key={\"all incidents\" + i}>\n          <td>{item[i].number}</td>\n          <td>{item[i].priority}</td>\n          <td>{item[i].short_description}</td>\n          <td>{item[i].category}</td>\n          <td>{item[i].state}</td>\n          <td>{item[i].sys_created_on}</td>\n        </tr>\n      );\n      displayrows.push(temp_row_element);\n    }\n    return (\n      <div className=\"content\">\n        <h3>At A Glance</h3>\n        <Link to=\"/\">Home</Link>\n\n        <Link\n          to=\"/open\"\n          style={{ color: \"black\", textDecoration: \"none\", padding: \"0\" }}\n        >\n          <Card title={\"Open\"} number={this.state.open} />\n        </Link>\n\n        <Link\n          to=\"/inprogress\"\n          style={{ color: \"black\", textDecoration: \"none\" }}\n        >\n          <Card title={\"In Progress\"} />\n        </Link>\n\n        <Link to=\"/closed\" style={{ color: \"black\", textDecoration: \"none\" }}>\n          <Card title={\"Closed\"} />\n        </Link>\n\n        <Link to=\"/resolved\" style={{ color: \"black\", textDecoration: \"none\" }}>\n          <Card title={\"Resolved\"} />\n        </Link>\n\n        {this.incident_table(displayrows)}\n        {this.state.addShow ? this.addRowTemplate() : <div></div>}\n        <button\n          onClick={() => {\n            this.setState({ addShow: !this.state.addShow });\n          }}\n        >\n          Create A New Incident\n        </button>\n      </div>\n    );\n  }\n  // display all incidents\n  incident_table = row_item => {\n    return (\n      <div className=\"incident_table\">\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>Number</th>\n              <th>Priority</th>\n              <th>Short description</th>\n              <th>Category</th>\n              <th>State</th>\n              <th>Created</th>\n            </tr>\n          </thead>\n          <tbody>{row_item}</tbody>\n        </Table>\n      </div>\n    );\n  };\n  addRowTemplate = () => {\n    return (\n      <tr>\n        <td>llll</td>\n        <td>uuuu</td>\n        <td>tttt</td>\n        <td>\n          {/* <Button\n            variant=\"primary\"\n            onClick={() => {\n              // console.log(\"clicked on save\");\n              this.addNewRow();\n            }}\n          >\n            Save\n          </Button> */}\n        </td>\n      </tr>\n    );\n  };\n\n  insert_incident = (\n    number,\n    priority,\n    short_description,\n    category,\n    state,\n    date\n  ) => {\n    //parameters for insertion:\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        number: number,\n        priority: priority,\n        short_description: short_description,\n        category: category,\n        state: state,\n        created: date\n      })\n    };\n    //Attempt to insert\n    fetch(URL + \"/insertIncident\", requestOptions)\n      .then(response => response.json())\n      .then(data => this.setState({ postId: data.id }));\n  };\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}