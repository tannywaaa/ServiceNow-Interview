{"ast":null,"code":"var _jsxFileName = \"/Users/wangtangni/Desktop/ServiceNow-Interview/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Table } from \"react-bootstrap\";\nimport Card from \"./components/Card\";\nconst URL = \"https://servicenow-ui-coding-challenge-api.netlify.app/.netlify/functions/server/incidents\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.incident_table = row_item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"incident_table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      }, \"Number\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, \"Priority\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, \"Short description\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }\n      }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, \"State\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, \"Created\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }\n      }, row_item)));\n    };\n\n    this.getDataByState = stateReqested => {\n      fetch(URL + stateReqested).then(async res => {\n        const api = await res.json();\n        const data = api; // check for error response\n\n        if (!res.ok) {\n          // get error message from body or default to response statusText\n          const error = data && data.message || res.statusText;\n          return Promise.reject(error);\n        } else {\n          console.log(data[0]);\n          this.setState({\n            incidence_show: data\n          });\n        }\n      });\n    };\n\n    this.state = {\n      incidents_all: [],\n      open: [],\n      inprogress: [],\n      resolved: [],\n      closed: []\n    };\n  }\n\n  async componentDidMount() {\n    const res = await fetch(URL);\n    const api = await res.json();\n    const incidents_all = api;\n\n    if (!res.ok) {\n      // get error message from body or default to response statusText\n      const error = incidents_all && incidents_all.message || res.statusText;\n      return Promise.reject(error);\n    } else {\n      let open = 0,\n          inprogress = 0,\n          resolved = 0,\n          closed = 0;\n      api.forEach(element => {\n        if (element.state === \"Open\") {\n          open++;\n        } else if (element.state === \"In Progress\") {\n          inprogress++;\n        } else if (element.state === \"Resolved\") {\n          resolved++;\n        } else if (element.state === \"Closed\") {\n          closed++;\n        }\n      });\n      console.log(\"open\", open);\n      this.setState({\n        incidents_all,\n        open: open,\n        inprogress: inprogress,\n        resolved: resolved,\n        closed: closed\n      });\n    }\n  }\n\n  render() {\n    if (this.state.incidents_all == null) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 50\n      }\n    });\n    let displayrows = [];\n    let item = this.state.incidents_all;\n\n    for (let i = 0; i < item.length; i++) {\n      let temp_row_element = /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, item[i].number), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, item[i].priority), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, item[i].short_description), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, item[i].category), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }, item[i].state), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }, item[i].sys_created_on));\n      displayrows.push(temp_row_element);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getDataByState(\"Open\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, \"By State Open \", this.state.open), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getDataByState(\"In Progress\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, \"By State In Progress \", this.state.inProgress), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getDataByState(\"Closed\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"By State Closed \", this.state.closed), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.getDataByState(\"Resolved\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, \"By State Resolved \", this.state.resolved), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, \"At A Glance\"), /*#__PURE__*/React.createElement(Card, {\n      href: \"/\",\n      title: \"aaa\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, \"All Incidents\"), this.incident_table(displayrows));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wangtangni/Desktop/ServiceNow-Interview/src/App.js"],"names":["React","Component","Table","Card","URL","App","constructor","props","incident_table","row_item","getDataByState","stateReqested","fetch","then","res","api","json","data","ok","error","message","statusText","Promise","reject","console","log","setState","incidence_show","state","incidents_all","open","inprogress","resolved","closed","componentDidMount","forEach","element","render","displayrows","item","i","length","temp_row_element","number","priority","short_description","category","sys_created_on","push","inProgress"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Table } from \"react-bootstrap\";\nimport Card from \"./components/Card\";\n\nconst URL =\n  \"https://servicenow-ui-coding-challenge-api.netlify.app/.netlify/functions/server/incidents\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      incidents_all: [],\n      open: [],\n      inprogress: [],\n      resolved: [],\n      closed: []\n    };\n  }\n  async componentDidMount() {\n    const res = await fetch(URL);\n    const api = await res.json();\n    const incidents_all = api;\n\n    if (!res.ok) {\n      // get error message from body or default to response statusText\n      const error = (incidents_all && incidents_all.message) || res.statusText;\n      return Promise.reject(error);\n    } else {\n      let open = 0,\n        inprogress = 0,\n        resolved = 0,\n        closed = 0;\n\n      api.forEach(element => {\n        if (element.state === \"Open\") {\n          open++;\n        } else if (element.state === \"In Progress\") {\n          inprogress++;\n        } else if (element.state === \"Resolved\") {\n          resolved++;\n        } else if (element.state === \"Closed\") {\n          closed++;\n        }\n      });\n      console.log(\"open\", open);\n\n      this.setState({\n        incidents_all,\n        open: open,\n        inprogress: inprogress,\n        resolved: resolved,\n        closed: closed\n      });\n    }\n  }\n  render() {\n    if (this.state.incidents_all == null) return <div />;\n    let displayrows = [];\n    let item = this.state.incidents_all;\n\n    for (let i = 0; i < item.length; i++) {\n      let temp_row_element = (\n        <tr>\n          <td>{item[i].number}</td>\n          <td>{item[i].priority}</td>\n          <td>{item[i].short_description}</td>\n          <td>{item[i].category}</td>\n          <td>{item[i].state}</td>\n          <td>{item[i].sys_created_on}</td>\n        </tr>\n      );\n      displayrows.push(temp_row_element);\n    }\n    return (\n      <div className=\"content\">\n        <button onClick={() => this.getDataByState(\"Open\")}>\n          By State Open {this.state.open}\n        </button>\n        <button onClick={() => this.getDataByState(\"In Progress\")}>\n          By State In Progress {this.state.inProgress}\n        </button>\n        <button onClick={() => this.getDataByState(\"Closed\")}>\n          By State Closed {this.state.closed}\n        </button>\n        <button onClick={() => this.getDataByState(\"Resolved\")}>\n          By State Resolved {this.state.resolved}\n        </button>\n\n        <h3>At A Glance</h3>\n        <Card href=\"/\" title={\"aaa\"} />\n        <h3>All Incidents</h3>\n        {this.incident_table(displayrows)}\n      </div>\n    );\n  }\n  incident_table = row_item => {\n    return (\n      <div class=\"incident_table\">\n        <Table striped bordered hover size=\"sm\">\n          <thead>\n            <tr>\n              <th>Number</th>\n              <th>Priority</th>\n              <th>Short description</th>\n              <th>Category</th>\n              <th>State</th>\n              <th>Created</th>\n            </tr>\n          </thead>\n          <tbody>{row_item}</tbody>\n        </Table>\n      </div>\n    );\n  };\n  getDataByState = stateReqested => {\n    fetch(URL + stateReqested).then(async res => {\n      const api = await res.json();\n      const data = api;\n\n      // check for error response\n      if (!res.ok) {\n        // get error message from body or default to response statusText\n        const error = (data && data.message) || res.statusText;\n        return Promise.reject(error);\n      } else {\n        console.log(data[0]);\n        this.setState({ incidence_show: data });\n      }\n    });\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}